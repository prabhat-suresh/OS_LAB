alias userSP R6;
alias sysNum R1;
alias ret_addr R2;
alias pt_entry R7;
pt_entry=PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16;

userSP=SP;
sysNum = [([PTBR + (2 * ((userSP - 5)/ 512))]* 512) + ((userSP - 5) % 512)];
ret_addr = ([PTBR + (2 * ((userSP - 1)/ 512))]* 512) + ((userSP - 1) % 512);

[pt_entry + 13] = SP;
SP = [pt_entry + 11] * 512 - 1;

[pt_entry + 9] = sysNum;

if(sysNum==INT_OPEN) then
    alias filename R3;
    filename=[([PTBR + (2 * ((userSP - 4)/ 512))]* 512) + ((userSP - 4) % 512)];
    
    alias pprt_entry R4;
    pprt_entry=0;
    alias pprt R5;
    pprt=[pt_entry+11]*512+RESOURCE_TABLE_OFFSET;
    while(pprt_entry<8) do
        if([pprt+pprt_entry*2]==-1) then
            break;
        endif;
        pprt_entry=pprt_entry+1;
    endwhile;

    if(pprt_entry==8) then
        [ret_addr]=-3;
        SP=[pt_entry + 13];
        [pt_entry + 9] = 0;
        ireturn;
    endif;

    alias oftIndex R8;
    multipush(R1,R2,R3,R4,R5,R6,R7);
    R1=OPEN;
    R2=filename;
    call MOD_3;
    oftIndex=R0;
    multipop(R1,R2,R3,R4,R5,R6,R7);

    if(oftIndex<0) then
        [ret_addr]=-1;
        SP=[pt_entry + 13];
        [pt_entry + 9] = 0;
        ireturn;
    endif;

    [pprt+pprt_entry*2]=FILE;
    [pprt+pprt_entry*2+1]=oftIndex;

    [ret_addr]=pprt_entry;
endif;

if(sysNum==INT_CLOSE) then
    alias file_desc R3;
    file_desc=[([PTBR + (2 * ((userSP - 4)/ 512))]* 512) + ((userSP - 4) % 512)];
    if(file_desc<0 || file_desc>7) then
        [ret_addr]=-1;
        SP=[pt_entry + 13];
        [pt_entry + 9] = 0;
        ireturn;
    endif;

    alias pprt R4;
    pprt=[pt_entry+11]*512+RESOURCE_TABLE_OFFSET;

    if([pprt+file_desc*2]!=FILE) then
        [ret_addr]=-1;
        SP=[pt_entry + 13];
        [pt_entry + 9] = 0;
        ireturn; 
    endif;

    alias oftIndex R5;
    oftIndex=[pprt+file_desc*2+1];

    multipush(R1,R2,R3,R4,R5,R6,R7);
    R1=CLOSE;
    R2=oftIndex;
    call MOD_3;
    multipop(R1,R2,R3,R4,R5,R6,R7);

    [pprt+file_desc*2]=-1;
    [ret_addr]=0;

endif;

if(sysNum==INT_SEEK) then
    alias file_desc R3;
    file_desc=[([PTBR + (2 * ((userSP - 4)/ 512))]* 512) + ((userSP - 4) % 512)];
    if(file_desc<0 || file_desc>7) then
        [ret_addr]=-1;
        SP=[pt_entry + 13];
        [pt_entry + 9] = 0;
        ireturn; 
    endif;

    alias pprt R4;
    pprt=[pt_entry+11]*512+RESOURCE_TABLE_OFFSET;

    alias offset R5;
    offset=[([PTBR + (2 * ((userSP - 3)/ 512))]* 512) + ((userSP - 3) % 512)];
    
    if([pprt+file_desc*2]!=FILE) then
        [ret_addr]=-1;
        SP=[pt_entry + 13];
        [pt_entry + 9] = 0;
        ireturn; 
    endif;
    
    alias oftIndex R8;
    oftIndex=[pprt+file_desc*2+1];

    alias inode_index R9;
    inode_index=[OPEN_FILE_TABLE+4*oftIndex];

	multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9);
	R1=ACQUIRE_INODE;
	R2=[SYSTEM_STATUS_TABLE+1];
	R3=inode_index;
	call RESOURCE_MANAGER;
	multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9);
	if(R0==-1) then
		[ret_addr]=-1;

		SP=[pt_entry + 13];
		[pt_entry + 9] = 0;

		ireturn; 
	endif;
    
    alias lseek R10;
    lseek=[OPEN_FILE_TABLE+oftIndex*4+2];

    alias filesize R11;
    if(inode_index==INODE_ROOT) then
        filesize=480;

    else    
        filesize=[INODE_TABLE+inode_index*16+2];
    endif;

    if(lseek+offset<0) then
        
		multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);
		R1=RELEASE_INODE;
		R2=[SYSTEM_STATUS_TABLE+1];
		R3=inode_index;
		call RESOURCE_MANAGER;
		
		multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11);
		[ret_addr]=-2;

		SP=[pt_entry + 13];
		[pt_entry + 9] = 0;

		ireturn; 
    endif;
    
    if(offset==0) then
        [OPEN_FILE_TABLE+2+4*oftIndex]=0;

    else
        if(lseek+offset>filesize) then
            [OPEN_FILE_TABLE+2+4*oftIndex]=filesize;
        else
            [OPEN_FILE_TABLE+2+4*oftIndex]=lseek+offset;
        endif;
    endif;
    
	multipush(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14);
	R1=RELEASE_INODE;
	R2=[SYSTEM_STATUS_TABLE+1];
	R3=inode_index;
	call RESOURCE_MANAGER;
	multipop(R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13,R14);

	[ret_addr]=0;
endif;

SP=[pt_entry + 13];
[pt_entry + 9] = 0;

ireturn; 