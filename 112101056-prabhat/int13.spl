alias userSP R0;
alias sysNum R1;

userSP=SP;
sysNum = [([PTBR + (2 * ((userSP - 5)/ 512))]* 512) + ((userSP - 5) % 512)];

[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = sysNum;

if(sysNum==INT_SEMGET) then
	alias sem_desc R2;
	alias pprt R3;
	alias semid R4;
	sem_desc=0;
	pprt=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 + RESOURCE_TABLE_OFFSET;
	while(sem_desc<8) do 
		if([pprt+sem_desc*2]==-1) then
			break;
		endif;
		sem_desc=sem_desc+1;
	endwhile;

	if(sem_desc==8) then
		[([PTBR + (2 * ((userSP - 1)/ 512))]* 512) + ((userSP - 1) % 512)]=-1;

		SP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;

		ireturn; 
	endif;

	multipush(R0,R1,R2,R3);	
	R1=ACQUIRE_SEMAPHORE;
	R2=[SYSTEM_STATUS_TABLE+1];
	call RESOURCE_MANAGER;

	semid=R0;
	
	multipop(R0,R1,R2,R3);	

	[pprt+sem_desc*2]=1;

	if(semid==-1) then 
		[([PTBR + (2 * ((userSP - 1)/ 512))]* 512) + ((userSP - 1) % 512)]=-2;
		SP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;

		ireturn; 
	endif;

	[([PTBR + (2 * ((userSP - 1)/ 512))]* 512) + ((userSP - 1) % 512)]=sem_desc;

	[pprt+sem_desc*2+1]=semid;
	[pprt+sem_desc*2]=SEMAPHORE;

endif;

if(sysNum==INT_SEMRELEASE) then	//semrelease
	alias sem_desc R2;
	sem_desc= [([PTBR + (2 * ((userSP - 4)/ 512))]* 512) + ((userSP - 4) % 512)];

	alias pprt R3;
	pprt=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 + RESOURCE_TABLE_OFFSET;

	if(sem_desc<0 || sem_desc>7 || [pprt+sem_desc*2]!=SEMAPHORE) then
		[([PTBR + (2 * ((userSP - 1)/ 512))]* 512) + ((userSP - 1) % 512)]=-1;
	else
		[([PTBR + (2 * ((userSP - 1)/ 512))]* 512) + ((userSP - 1) % 512)]=0;

		multipush(R0,R1,R2,R3);	

		R1=RELEASE_SEMAPHORE;
		R2=[SYSTEM_STATUS_TABLE+1];
		R3=[pprt+sem_desc*2+1];

		call RESOURCE_MANAGER;
		
		multipop(R0,R1,R2,R3);	

		[pprt+sem_desc*2]=-1;
	endif;
endif;

SP=[PROCESS_TABLE + ( [SYSTEM_STATUS_TABLE + 1] * 16) + 13];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;

ireturn; 